1：页面设计图--分类：商城类--我们还需要自己开发整站建设的模板；
2：分块
	1：顶部
	2：logo区 logo+搜索框
	3：导航栏：导航+次级导航+具体信息+辅助信息
	4：产品信息：
		分类产品信息：横排布局，四方布局
	5：底部  友情链接+footer
3：通用方法
	1：从上到下以此把盒子写完
	2：先将整站布局搞定，再填充内容---大量的内容需要复制，样式需要公用，要不然写死i，
	先把所占空间规划好，再填充内容
4：整站的目录结构；
	基本的目录结构
	还是需要webpack来搭建服务器，使用livereload--只需要服务器，不需要打包，有server就行
		1：npm install webpack-server  init  json写入start，就可以启动服务器了
5：css初始化；放在码云里面；reset不需要的去掉，提升性能
6：背景颜色，字体颜色，基本没啥用，设置在html里面；
7：页面的版心；默认放在页面中间部分：版心；会用ps放辅助线；
	通栏：默认占一整栏，版心970px；
页面布局：不用一个大div包裹，直接分成头中底三部分；--还要想办法进行浏览器适配和响应式开发
8：顶部：先写html，然后加说明文档，然后写css
	菜单到底是自己写还是引入插件，先自己写再引入插件
	使用js写还是用hover写？js方便多了
9：他们的开发效率是最高的，他们的技术已经非常成熟了，各种坑已经走过了，所以我们不要自己尝试；
10：top也是嵌套在版心里面的；
	各种的功能，纯css的没啥功能可言；

11：需要添加箭头；三角形可以用icon，可以用svg，可以用border-radius，可以用画图
	border的话动画就很难实现了--动画要跟变形结合在一起
	直接用hover+变形是最快的；


新的知识点：
1:在css文件顶部：@charset "utf-8"
2:头部的居中怎么做的？
3:菜单到底使用两级li嵌套还是用多个ul；
4:下拉显示隐藏使用js还是用hover，js快多了
5:css，jquery操作class的时候类名连的太长，错误率明显提升，放个两三级就算了
6：h1 权重优化；text-indent:-1000em;  让这段文字隐藏起来
7：css渐变background: linear-gradient(red, blue); 放在最后，从上到下
	 	  background: linear-gradient(to right, red , blue);位置对应后面，结束位置颜色
8:JQUERY对大小写也敏感，css如果变成CSS就会报错；只有内置的函数名才忽略大小写
9:绝对定位的百分比宽度和相对定位的百分比宽度是不一样的；切换卡使用相对定位也是可以的
10:底部到底是怎么做的？用a标签加竖杠图片，还是i标签加宽；还是用li
	a+i标签
11:居中问题，跟盒模型也会有关系，
12：css文件里面类名的花括号之间是不能用分号的，用了就解析不了了；
13:什么样的颜色才会好看？？？白底淡灰版心--关键还是整体感觉；
14:主页面的色调要先定好，白 蓝 灰  
15:----主要的功能：仅仅是jquery的tab切换，其他都没有；
	以及这些排版成为模板；
16:e标签目前是可以完全自定义的标签



